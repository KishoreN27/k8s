**************Do all the things in Master Node***************

1). create two dir, prometheus and grafana 

2). create pv for Prometheus

3). In pv.yaml file add the name as promo-pv and give the slave path and value as slave-name

4) same as for Grafana to create the pv.yaml in Grafana directory

5) create namespace as monitoring --> kubectl create ns monitoring

6) install helm

7) install prometheus

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo add grafana https://grafana.github.io/helm-charts
helm repo update
paste the command one by one

helm install prometheus prometheus-community/prometheus \
--namespace monitoring \
--set alertmanager.persistentVolume.storageClass="standard" \
--set server.persistentVolume.storageClass="standard"
this is single command

8) then apply pv.yaml --> kubectl apply -f pv.yaml -n monitoring
check---> kubectl get pvc -n monitoring

9) create pvc file with the same name as previously we check

10) delete old pvc file--> kubectl delete pvc promotheus-server -n monitoring

11) then apply pvc.yaml --> kubectl apply -f pvc.yaml -n monitoring

12) then create Grafana.yaml in Grafana dir
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus-server.monitoring.svc.cluster.local
      access: proxy
      isDefault: true

13) then install Grafana --> in Grafana command we can change the passwd and path and then NodePort instead of LoadBalancer

 helm install grafana grafana/grafana \
    --namespace monitoring \
    --set persistence.storageClassName="standard" \
    --set persistence.enabled=true \
    --set adminPassword='test123' \
    --values /home/ubuntu/grafana/grafana.yaml \
    --set service.type=Nodeport

14) we get the Grafana pvc in monitoring namespace then we delete the pvc and creating the same name of pvc

15) then check ---> kubectl get svc -n monitoring 

16) copy the port number and ip address of slave then login into the grafana



